version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.3-node
        environment:
          RAILS_ENV: test
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_DATABASE: circleci
          DB_USERNAME: circleci
          DB_PASSWORD: circleci
          TZ: /usr/share/zoneinfo/Asia/Tokyo
      - image: circleci/mysql:5.5.62-ram
        environment:
          MYSQL_ROOT_PASSWORD: circleci
          MYSQL_DATABASE: circleci
          MYSQL_USER: circleci
          MYSQL_PASSWORD: circleci
          TZ: /usr/share/zoneinfo/Asia/Tokyo
    working_directory: ~/Taka116/news-crawler
    steps:
      - checkout

      # Restore bundle cache
      - restore_cache:
          key: rails-demo-{{ checksum "Gemfile.lock" }}

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle

      # Store bundle cache
      - save_cache:
          key: rails-demo-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Database setup
          command: |
            bundle exec rake db:create db:schema:load --trace
            bundle exec rake db:migrate
            
      - run:
          when: always
          command: bundle exec rspec --color --require spec_helper --format progress spec
      - run:
          when: always
          command: bundle exec rails_best_practices .
      - run:
          when: always
          command: bundle exec brakeman -z --rails5
      - run: 
          when: always
          command: bundle exec reek
      - run: 
          when: always
          command: bundle exec rubocop

      # Save test results for timing analysis
      - store_test_results:
          path: test_results